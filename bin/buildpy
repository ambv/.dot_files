#!/bin/bash -e
export BRANCH="/tmp/configurecache-$(git branch --show-current)"
export CC=/usr/local/opt/ccache/libexec/clang
export CFLAGS="-g3 -O0 -ggdb -I$(brew --prefix readline)/include"
export LDFLAGS="-L$(brew --prefix readline)/lib"
export PKG_CONFIG_PATH="$(brew --prefix openssl@1.1)/lib/pkgconfig:$(brew --prefix tcl-tk)/lib/pkgconfig"
# export CC=/usr/bin/clang
# export CFLAGS="-fsanitize=undefined -fno-omit-frame-pointer"
# export LDFLAGS="-fsanitize=undefined -fno-omit-frame-pointer"
export CONFIGURE_FLAGS=("--with-tcltk-libs=$(pkg-config tk --libs)" "--with-tcltk-includes=$(pkg-config tk --cflags)")
if [[ "$1" == "opt" ]]; then
    echo
    echo "########    Optimized production build    ########"
    echo
    CONFIGURE_FLAGS+=(--enable-optimizations --with-lto)
elif [[ "$1" == "framework" ]]; then
    FRAMEWORK_INSTALL_DIR="/tmp/cpython-root-$(git branch --show-current)"
    echo
    echo "########    Framework PYDEBUG build    ########"
    echo
    if [[ -d $FRAMEWORK_INSTALL_DIR ]]; then
        echo "Removing stale framework directory: $FRAMEWORK_INSTALL_DIR"
        rm -rf $FRAMEWORK_INSTALL_DIR
    fi
    CONFIGURE_FLAGS+=(--enable-framework=$FRAMEWORK_INSTALL_DIR/Library/Frameworks  --with-pydebug)
else
    echo
    echo "########    Non-GUI PYDEBUG build    ########"
    echo
    CONFIGURE_FLAGS+=(--cache-file=$BRANCH --with-pydebug) # --with-undefined-behavior-sanitizer"
fi

make distclean || (./configure "${CONFIGURE_FLAGS[@]}" && make distclean)
time ./configure "${CONFIGURE_FLAGS[@]}"
# time make regen-all
time make --quiet -j10
if [[ "$1" == "framework" ]]; then
    if [[ -d $FRAMEWORK_INSTALL_DIR ]]; then
        echo "Removing stale framework directory: $FRAMEWORK_INSTALL_DIR"
        rm -rf $FRAMEWORK_INSTALL_DIR
    fi
    time make --quiet install
fi
